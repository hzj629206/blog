<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Garage on 平凡的路</title><link>https://ogr.xyz/tags/garage/</link><description>Recent content in Garage on 平凡的路</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>ogr.xyz</copyright><lastBuildDate>Thu, 14 Mar 2024 13:35:17 +0800</lastBuildDate><atom:link href="https://ogr.xyz/tags/garage/index.xml" rel="self" type="application/rss+xml"/><item><title>Garage对象存储的安装和使用</title><link>https://ogr.xyz/p/garage-setup/</link><pubDate>Thu, 14 Mar 2024 13:35:17 +0800</pubDate><guid>https://ogr.xyz/p/garage-setup/</guid><description>&lt;h2 id="背景">背景&lt;/h2>
&lt;p>前几年 Oracle Cloud 云服务推出的时候，申请了日区（ap-tokyo-1）永久免费资源。包括免费主机和共计 200GB 的块存储额度。&lt;br>
闲来无事，整理一下：保留一台 Ubuntu Linux 实例，实例初始存储空间 50G 本地磁盘，剩余 150G 额度创建一个块存储卷通过iSCSI挂载到实例上。&lt;br>
实例配置: 1 OCPU，1GB Mem，0.48Gbps Bandwidth，整体性能一般，当然能免费使用也没什么可说的。创建好实例并装好 Docker 后一直没什么实际用处，有段时间用来挂载小雅Alist看视频。&lt;/p>
&lt;p>最近心血来潮来折腾个人博客。调查了一番之后选择用 Hugo + Markdown 生成静态博客。如何搭建静态博客暂且不表，其中涉及到图片等资源如何存储的问题。图片可以选择跟博客内容一起发布和托管，但这不符合折腾的精神。必须要搞一个图床！另一个好处时如果文章要同步发布到多个平台时不需要处理图片链接问题。&lt;/p>
&lt;p>关于图床，有一些自托管部署的开源项目，但目前以 S3 为代表的对象存储被广泛应用，非常适合用于搭建图床。各大云服务商都有推出自己的对象存储服务，有的有免费存储空间额度。但是一般免费额度都比较小，一般在 20G 以下。考虑到 Oracle 免费实例上有 150G 的存储空间，那有没有可以自己搭建的 S3 兼容的开源项目呢？&lt;/p>
&lt;p>那必须是有的，比较流行的是 Ceph 和 Minio。Ceph 生态庞大但是比较重量级，不适合个人用户。Minio 对 S3 的兼容性最好，支持用 Docker 部署单实例使用，部署和使用都很简单。在实例上安装体验了一下，发现即使没存储内容时也很容易把内存占满，所以只能放弃了。&lt;/p>
&lt;p>经过一番搜索后，看到有人推荐比 Minio 更轻量级的开源项目 Garage。&lt;a class="link" href="https://garagehq.deuxfleurs.fr/" target="_blank" rel="noopener"
>Garage&lt;/a> 是一个法国团队开发的 S3 兼容的对象存储，比较小众没什么知名度，网上的资料也比较少。这里记录一下 Garage 的安装和使用。Garage 的介绍可以参考&lt;a class="link" href="https://garagehq.deuxfleurs.fr/documentation/quick-start/" target="_blank" rel="noopener"
>官方文档&lt;/a>，文档比较简明扼要，全读一遍也费不了多少时间。&lt;/p>
&lt;h2 id="准备">准备&lt;/h2>
&lt;p>我用 Linuxserver.io 的 &lt;a class="link" href="https://docs.linuxserver.io/images/docker-swag/" target="_blank" rel="noopener"
>SWAG&lt;/a> (Secure Web Application Gateway) Docker 镜像在实例上安装 Nginx 环境。其中需要购入一个域名，这里以 &lt;code>mydomin.com&lt;/code> 指代。SWAG 配置好域名服务商的认证信息后可以自动申请和管理 Let&amp;rsquo;s Encrypt SSL 证书。非常适合个人使用。详细的安装使用说明参考&lt;a class="link" href="https://docs.linuxserver.io/images/docker-swag/" target="_blank" rel="noopener"
>官方文档&lt;/a>。&lt;/p>
&lt;p>Docker 创建一个名字为 &lt;code>lsio&lt;/code> 的 Bridge 类型的网络，所有 Docker 容器都使用这个网络，这样就可以通过容器名称相互访问。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">docker run -d &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --name&lt;span class="o">=&lt;/span>swag &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --cap-add&lt;span class="o">=&lt;/span>NET_ADMIN &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -e &lt;span class="nv">PUID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>id -u&lt;span class="k">)&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -e &lt;span class="nv">PGID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>id -u&lt;span class="k">)&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -e &lt;span class="nv">TZ&lt;/span>&lt;span class="o">=&lt;/span>Asia/Singapore &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -e &lt;span class="nv">URL&lt;/span>&lt;span class="o">=&lt;/span>mydomain.com &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -e &lt;span class="s1">&amp;#39;SUBDOMAINS=\*,\*.web-garage&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -e &lt;span class="nv">VALIDATION&lt;/span>&lt;span class="o">=&lt;/span>dns &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -e &lt;span class="nv">DNSPLUGIN&lt;/span>&lt;span class="o">=&lt;/span>aliyun &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -e &lt;span class="nv">EMAIL&lt;/span>&lt;span class="o">=&lt;/span>myaliyunemail@gmail.com &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -p 443:443 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v /etc/swag:/config &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --restart always &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --net&lt;span class="o">=&lt;/span>lsio &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --dns-search&lt;span class="o">=&lt;/span>. &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> lscr.io/linuxserver/swag:latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里我使用的是阿里云托管域名。并且指定用通配符为所有二级域名 &lt;code>*.mydomain.com&lt;/code> 和所有三级域名 &lt;code>*.web-garage.mydomain.com&lt;/code> 申请SSL证书。
在&lt;strong>虚拟云网络&lt;/strong>里面添加入站规则，确保 443 端口能被公网访问。&lt;/p>
&lt;h2 id="安装-garage">安装 Garage&lt;/h2>
&lt;p>个人使用的话用 Docker 镜像安装单实例即可。&lt;/p>
&lt;h3 id="准备配置文件">准备配置文件&lt;/h3>
&lt;p>这里配置文件路径为 &lt;code>/etc/garage/garage.toml&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">metadata_dir&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;/var/lib/garage/meta&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">data_dir&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;/var/lib/garage/data&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">db_engine&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;lmdb&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">replication_mode&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;none&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">compression_level&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">rpc_bind_addr&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;[::]:3901&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">rpc_public_addr&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;127.0.0.1:3901&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">rpc_secret&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;$(openssl rand -hex 32)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">s3_api&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">s3_region&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;garage&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">api_bind_addr&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;[::]:3900&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">root_domain&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;.s3-garage.mydomain.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">s3_web&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">bind_addr&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;[::]:3902&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">root_domain&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;.web-garage.mydomain.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">index&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;index.html&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中 &lt;code>rpc_secret&lt;/code> 可以用 &lt;code>openssl rand -hex 32&lt;/code> 生成，3901 是集群节点内部通信访问端口，3900 是 S3 API 访问端口，Garage 不支持访问策略，所以使用 S3 API 时必须要使用 Secret Key 访问和操作 Bucket。也就是说无法在浏览器中通过 &lt;code>https://&amp;lt;bucket&amp;gt;.s3-garage.mydomain.com/&amp;lt;key&amp;gt;&lt;/code> 或 &lt;code>https://s3-garage.mydomain.com/&amp;lt;bucket&amp;gt;/&amp;lt;key&amp;gt;&lt;/code> 访问内容。&lt;br>
那要如何在公网匿名访问内容呢？那就得要用到 3902 端口了，这里指的是 Garage 支持托管静态网站，比如说把 Hugo 站点上传到 Garage Bucket，就可以通过 &lt;code>https://&amp;lt;bucket&amp;gt;.web-garage.mydomain.com&lt;/code> 访问网站了。那已知 Object Key 的情况下就可以通过 &lt;code>https://&amp;lt;bucket&amp;gt;.web-garage.mydomain.com/&amp;lt;key&amp;gt;&lt;/code> 变相访问任意文件了。&lt;/p>
&lt;h3 id="创建容器">创建容器&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">docker run -d &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --name garaged &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --restart always &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --network lsio &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v /etc/garage/garage.toml:/etc/garage.toml &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v /mnt/iscsi/garage/meta:/var/lib/garage/meta &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v /mnt/iscsi/garage/data:/var/lib/garage/data &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> dxflrs/garage:v0.9.3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中 &lt;code>/mnt/iscsi&lt;/code> 是块存储卷的挂载路径，在此创建 Garage 的 &lt;code>meta&lt;/code> 和 &lt;code>data&lt;/code> 目录。为了安全起见，不映射任何公开端口，统一用域名走 Nginx HTTPS 443 端口访问。至此，容器就跑起来了。容器内部不包含 SHELL 程序，不能使用 &lt;code>docker exec -it garaged /bin/sh&lt;/code> 进行交互式访问。需要使用 &lt;code>docker exec garaged /garage&lt;/code>，所有的命令都可以用 &lt;code>--help&lt;/code> 自解释。&lt;br>
可以用 &lt;code>docker logs garaged -f&lt;/code> 查看日志。&lt;br>
可以用 &lt;code>docker exec garaged /garage status&lt;/code> 查看节点状态。下面的步骤会用到当前节点 ID。&lt;br>
&lt;img src="https://oos.ogr.xyz/b0a94eb6386d5e16e371942aa6394d5d7cb365556d9ba2ee4ec09404484d18ff.png"
loading="lazy"
alt="picture 0"
>&lt;/p>
&lt;h3 id="初始化节点">初始化节点&lt;/h3>
&lt;p>在使用之前需要先初始化节点，即配置当前节点的区域和存储空间信息。&lt;/p>
&lt;p>方法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">docker &lt;span class="nb">exec&lt;/span> garaged /garage layout assign -z &amp;lt;zone&amp;gt; -c &amp;lt;capacity&amp;gt; &amp;lt;NODE ID&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>示例：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">docker &lt;span class="nb">exec&lt;/span> garaged /garage layout assign -z jp -c 50G aabf22f2b4bc9a1b
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>最后需要使用上述配置生效。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">docker &lt;span class="nb">exec&lt;/span> garaged /garage layout apply --version&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>对于新的配置需要指定 &lt;code>--version&lt;/code> 参数，在之前的版本号基础上 +1，因为是新创建的节点，版本号相当于 0，所以这里是 &lt;code>--version=1&lt;/code>。&lt;/p>
&lt;p>再使用 &lt;code>garage status&lt;/code> 查看状态信息。
&lt;img src="https://oos.ogr.xyz/875e179b1385adf4ee959e536072c5d726e750acfbb0cd0b4e5eaed8599854cf.png"
loading="lazy"
alt="picture 1"
>&lt;/p>
&lt;p>至此，当前节点初始化完成，可以创建存储桶（Bucket）和访问密钥（Key）了。&lt;/p>
&lt;h3 id="初始化存储桶">初始化存储桶&lt;/h3>
&lt;p>创建 Bucket 很简单，指定 bucket name 就可以了。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">docker &lt;span class="nb">exec&lt;/span> garaged /garage bucket create blog
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里创建了一个名为 &lt;code>blog&lt;/code> 的 Bucket。&lt;/p>
&lt;p>可以用下列命令检查 Bucket 状态。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">docker &lt;span class="nb">exec&lt;/span> garaged /garage bucket list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker &lt;span class="nb">exec&lt;/span> garaged /garage bucket info blog
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>要访问上述创建的 Bucket，还需要先创建 API Key。一个 Key 可以配置为访问多个 Bucket，一个 Bucket 可以被多个 Key 访问。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">docker &lt;span class="nb">exec&lt;/span> garaged /garage key create blog-app-key
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里创建一个名为 &lt;code>blog-app-key&lt;/code> 的访问密钥，记录下输出的 &lt;code>Key ID&lt;/code> 和 &lt;code>Secret key&lt;/code>。&lt;/p>
&lt;p>可以用下列命令检查 Key 状态。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">docker &lt;span class="nb">exec&lt;/span> garaged /garage key list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker &lt;span class="nb">exec&lt;/span> garaged /garage key info blog-app-key
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接下来授权 Key 访问 Bucket。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">docker &lt;span class="nb">exec&lt;/span> garaged /garage bucket allow &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --read &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --write &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --owner &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> blog &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --key blog-app-key
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>至此可以使用各种 S3 兼容的客户端和库访问存储桶了。需要注意的点：&lt;/p>
&lt;ol>
&lt;li>&lt;code>region&lt;/code> 固定为 &lt;code>garage&lt;/code>。&lt;/li>
&lt;li>需要配置 &lt;code>force_path_style=true&lt;/code>，以使用 &lt;code>https://s3-garage.mydomain.com/&amp;lt;bucket&amp;gt;&lt;/code> 的形式，而不是 &lt;code>https://&amp;lt;bucket&amp;gt;.s3-garage.mydomain.com&lt;/code>。后者需要为每个桶都要配置域名。&lt;/li>
&lt;/ol>
&lt;p>最后要允许存储桶能被公开匿名访问。Garage 不支持访问策略，只能通过静态网站托管来间接实现。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">docker &lt;span class="nb">exec&lt;/span> garaged /garage bucket website --allow blog
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>至此，只需要添加域名 &lt;code>blog.web-garage.mydomain.com&lt;/code> 就可以访问 &lt;code>blog&lt;/code> 桶里面的文件了。访问方式：&lt;code>https://blog.web-garage.mydomain.com/&amp;lt;key&amp;gt;&lt;/code>。&lt;/p>
&lt;p>最终用 &lt;code>garage status&lt;/code> 查看信息时是这样的。&lt;br>
&lt;img src="https://oos.ogr.xyz/343aa57f00aeb3da24a1153cca375ba4f1272deb1241ba4853fe8be0cf8ccf2b.png"
loading="lazy"
alt="picture 2"
>&lt;/p>
&lt;h2 id="使用-garage">使用 Garage&lt;/h2>
&lt;h3 id="添加子域名">添加子域名&lt;/h3>
&lt;p>上述步骤提及到三个域名：&lt;code>s3-garage.mydomain.com&lt;/code>、&lt;code>web-garage.mydomain.com&lt;/code>、&lt;code>blog.web-garage.mydomain.com&lt;/code>。其中 &lt;code>web-garage.mydomain.com&lt;/code> 并不会实际使用到。&lt;br>
在域名托管商为 &lt;code>mydomain.com&lt;/code> 添加两个子域名 &lt;code>s3-garage.mydomain.com&lt;/code> 和 &lt;code>blog.web-garage.mydomain.com&lt;/code>，都指向当前实例的公网IP。&lt;/p>
&lt;h3 id="nginx-反向代理">Nginx 反向代理&lt;/h3>
&lt;p>在 SWAG 容器的 &lt;code>/config/swag/nginx/proxy-confs&lt;/code> 目录下创建以下两个文件，然后重启容器。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-nginx" data-lang="nginx">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># s3-garage.subdomain.conf
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">server&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">listen&lt;/span> &lt;span class="mi">443&lt;/span> &lt;span class="s">ssl&lt;/span> &lt;span class="s">http2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">listen&lt;/span> &lt;span class="s">[::]:443&lt;/span> &lt;span class="s">ssl&lt;/span> &lt;span class="s">http2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">server_name&lt;/span> &lt;span class="s">s3-garage.mydomain.com&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">include&lt;/span> &lt;span class="s">/config/nginx/ssl.conf&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">client_max_body_size&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">location&lt;/span> &lt;span class="s">/&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">include&lt;/span> &lt;span class="s">/config/nginx/proxy.conf&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">include&lt;/span> &lt;span class="s">/config/nginx/resolver.conf&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">set&lt;/span> &lt;span class="nv">$upstream_app&lt;/span> &lt;span class="s">garaged&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">set&lt;/span> &lt;span class="nv">$upstream_port&lt;/span> &lt;span class="mi">3900&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">set&lt;/span> &lt;span class="nv">$upstream_proto&lt;/span> &lt;span class="s">http&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_pass&lt;/span> &lt;span class="nv">$upstream_proto://$upstream_app:$upstream_port&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Disable buffering to a temporary file.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kn">proxy_max_temp_file_size&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-nginx" data-lang="nginx">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># web-garage.subdomain.conf
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">server&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">listen&lt;/span> &lt;span class="mi">443&lt;/span> &lt;span class="s">ssl&lt;/span> &lt;span class="s">http2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">listen&lt;/span> &lt;span class="s">[::]:443&lt;/span> &lt;span class="s">ssl&lt;/span> &lt;span class="s">http2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">server_name&lt;/span> &lt;span class="s">*.web-garage.mydomain.com&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">include&lt;/span> &lt;span class="s">/config/nginx/ssl.conf&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">client_max_body_size&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">location&lt;/span> &lt;span class="s">/&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">include&lt;/span> &lt;span class="s">/config/nginx/proxy.conf&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">include&lt;/span> &lt;span class="s">/config/nginx/resolver.conf&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">set&lt;/span> &lt;span class="nv">$upstream_app&lt;/span> &lt;span class="s">garaged&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">set&lt;/span> &lt;span class="nv">$upstream_port&lt;/span> &lt;span class="mi">3902&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">set&lt;/span> &lt;span class="nv">$upstream_proto&lt;/span> &lt;span class="s">http&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_pass&lt;/span> &lt;span class="nv">$upstream_proto://$upstream_app:$upstream_port&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>之后就可以通过 &lt;code>https://s3-garage.mydomain.com&lt;/code> 和 &lt;code>https://blog.web-garage.mydomain.com&lt;/code> 访问 Garage 了。&lt;/p>
&lt;h3 id="客户端工具">客户端工具&lt;/h3>
&lt;p>可以和 Garage 集成的工具：&lt;/p>
&lt;ul>
&lt;li>awscli&lt;/li>
&lt;li>minio-client&lt;/li>
&lt;li>s3cmd&lt;/li>
&lt;li>rclone&lt;/li>
&lt;li>alist&lt;/li>
&lt;li>Cyberduck&lt;/li>
&lt;li>WinSCP&lt;/li>
&lt;/ul>
&lt;p>Cloudflare Workers 里面推荐使用 &lt;code>aws4fetch&lt;/code> 库。&lt;/p>
&lt;p>对于使用 VS Code 写 Markdown 的用户，推荐 &lt;code>Markdown Image&lt;/code> 插件。该插件以粘贴的形式自动上传至云服务并生成可访问链接。详情可参见&lt;a class="link" href="https://github.com/imlinhanchao/vsc-markdown-image" target="_blank" rel="noopener"
>插件说明&lt;/a>。&lt;/p>
&lt;p>Markdown Image 插件实际使用配置如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;markdown-image.base.uploadMethod&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="s2">&amp;#34;S3&amp;#34;&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;markdown-image.s3.endpoint&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="s2">&amp;#34;https://s3-garage.mydomain.com&amp;#34;&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;markdown-image.s3.region&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="s2">&amp;#34;garage&amp;#34;&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;markdown-image.s3.bucketName&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="s2">&amp;#34;blog&amp;#34;&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;markdown-image.s3.accessKeyId&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;Key ID&amp;gt;&amp;#34;&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;markdown-image.s3.secretAccessKey&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;Secret key&amp;gt;&amp;#34;&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;markdown-image.s3.cdn&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="s2">&amp;#34;https://blog.web-garage.mydomain.com/${filepath}&amp;#34;&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;markdown-image.s3.config&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;forcePathStyle&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="总结">总结&lt;/h2>
&lt;p>个人用户自建 S3 存储可以突破云厂商的免费额度限制，在国内的环境下还可以避免被恶意刷流量。并且 S3 已经是对象存储的事实标准，将来如果想要迁移到其他地方也是非常方便的。&lt;/p>
&lt;p>对于 Garage、Minio 这种开源项目，更加倾向于简洁性，包括简单的架构，简单的部署和维护。那么自然地就不可能有极致的性能了，比如说高吞吐和大量小文件的场景就会有瓶颈。当然个人用户一般也没有极致的性能需求。&lt;/p>
&lt;p>Minio 是 Go 语言实现的，知名度较高，生态也比较丰富，使用也比较方便。&lt;br>
Garage 是 Rust 语言实现的，相较而言比较小众，更谈不上生态，自身甚至不包括 WebUI 管理界面。&lt;/p>
&lt;p>但如果你想在一台性能较弱的主机上部署 S3 兼容服务，那 Garage 或许是个不错的选择。&lt;/p></description></item></channel></rss>